apply plugin: 'com.jfrog.bintray'


if (project.hasProperty("android")) { // Android libraries
    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    task javadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    }
} else { // Java libraries
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

// Bintray
def userProp = System.getenv('BINTRAY_USER_ETHDROID')
def keyProp = System.getenv('BINTRAY_KEY_ETHDROID')
def passProp = System.getenv('BINTRAY_PASS_ETHDROID')

File propertiesFile = project.rootProject.file('local.properties')

if( propertiesFile.exists() ){
    Properties properties = new Properties()
    properties.load(propertiesFile.newDataInputStream())

    userProp = properties.getProperty("bintray.user")
    keyProp = properties.getProperty("bintray.apikey")
    passProp = properties.getProperty("bintray.gpg.password")
}




bintray {
    user = userProp
    key = keyProp

    configurations = ['archives']

    override = true

    pkg {
        repo = bintrayRepo
        name = bintrayName
        userOrg = bintrayOrg
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        publish = true
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
            gpg {
                sign = true //Determines whether to GPG sign the files. The default is false
                passphrase = passProp
                //Optional. The passphrase for GPG signing'
            }
        }
    }
}
